@model PetListingViewModel

@{
    ViewData["Title"] = "Edit a Listing";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit a pet listing</h1>

<form asp-action="Edit" enctype="multipart/form-data">
    <input type="hidden" asp-for="PetId" />
    <div class="row gtr-uniform">
        <div class="col-12">
            <label asp-for="Name"></label>
            <input asp-for="Name" class="form-control"/>
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="col-12">
            <label asp-for="Breed"></label>
            <input asp-for="Breed" class="form-control"/>
            <span asp-validation-for="Breed" class="text-danger"></span>
        </div>
        <div class="col-12">
            <label asp-for="Age"></label>
            <input asp-for="Age" type="text" class="form-control" style="width:100%"/>
            <span asp-validation-for="Age" class="text-danger"></span>
        </div>
        <div class="col-12">
            <label asp-for="Gender"></label>
            @Html.DropDownListFor(model => model.Gender,
                new SelectList(new List<string> { "Male", "Female" }),
                "Choose Gender",
                new { @class = "form-control" })

            <span asp-validation-for="Gender" class="text-danger"></span>

        </div>
        <div class="col-12">
            <label asp-for="AdoptionPrice" class="control-label"></label>
            <input asp-for="AdoptionPrice" class="form-control"/>
            <span asp-validation-for="AdoptionPrice" class="text-danger"></span>
        </div>
        <div class="col-12">
            <label asp-for="IsCastrated"></label>
            @Html.DropDownListFor(model => model.IsCastrated,
                new SelectList(new List<string> { "Yes", "No" }),
                "Choose option",
                new { @class = "form-control" })

            <span asp-validation-for="IsCastrated" class="text-danger"></span>

        </div>
        <div class="col-12">
            <label asp-for="Coat"></label>
            @Html.DropDownListFor(model => model.Coat,
                new SelectList(new List<string> { "Short", "Medium", "Long", "Curly" }),
                "Choose Coat",
                new { @class = "form-control" })

            <span asp-validation-for="Coat" class="text-danger"></span>
        </div>
        <div class="col-12">
            <label asp-for="Size"></label>
            @Html.DropDownListFor(model => model.Size,
                new SelectList(new List<string> { "Small", "Medium", "Large" }),
                "Choose Size",
                new { @class = "form-control" })

            <span asp-validation-for="Size" class="text-danger"></span>
        </div>
        <div class="col-12">
            <label asp-for="IsAffectionate"></label>
            @Html.DropDownListFor(model => model.IsAffectionate,
                new SelectList(new List<string> { "Yes", "No" }),
                "Choose option",
                new { @class = "form-control" })

            <span asp-validation-for="IsAffectionate" class="text-danger"></span>
        </div>
        <div class="col-12">
            <label asp-for="Location"></label>
            <input asp-for="Location" class="form-control"/>
            <span asp-validation-for="Location" class="text-danger"></span>
        </div>
        <div class="col-12">
            <label asp-for="ActivityLevel"></label>
            @Html.DropDownListFor(model => model.ActivityLevel,
                new SelectList(new List<string> { "Active", "Moderate", "Low" }),
                "Choose option",
                new { @class = "form-control" })
            <span asp-validation-for="ActivityLevel" class="text-danger"></span>
        </div>
        <div class="col-12">
            <label asp-for="Color" class="control-label"></label>
            <input asp-for="Color" class="form-control"/>
            <span asp-validation-for="Color" class="text-danger"></span>
        </div>
        <div class="col-12">
            <label asp-for="Description" class="control-label"></label>
            <input asp-for="Description" class="form-control"/>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="col-12">
            <label asp-for="Status"></label>
            @Html.DropDownListFor(model => model.Status,
                Html.GetEnumSelectList<PAPData.Entities.PetStatus>(),
                "Choose Status",
                new { @class = "form-control" })
            <span asp-validation-for="Status" class="text-danger"></span>
        </div>
        <input type="hidden" asp-for="PictureUrl" />
        <div class="col-12">
            <label asp-for="ProfilePicture" class="control-label"></label>
            <input asp-for="ProfilePicture" type="file" class="form-control" id="fileInput"/>
            <span asp-validation-for="ProfilePicture" class="text-danger"></span>

            <div class="mt-2">
                <strong>Selected file:</strong>
                <span id="selectedFileName">
                    @(string.IsNullOrEmpty(Model.PictureUrl) ? "No file chosen" : System.IO.Path.GetFileName(Model.PictureUrl))
                </span>
            </div>
        </div>
        <script>
            document.getElementById('fileInput').addEventListener('change', function() {
                let fileName = this.files.length > 0 ? this.files[0].name : "No file chosen";
                document.getElementById('selectedFileName').textContent = fileName;
            });
        </script>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="col-12">
            <ul class="actions">
                <li><input type="submit" value="Save" class="primary"/></li>
            </ul>
        </div>
    </div>

</form>



<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
